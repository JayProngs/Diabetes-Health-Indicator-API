---
title: "EDA"
author: "Jay Thakur"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

# Introduction

The **Diabetes Health Indicators Dataset** is derived from the Behavioral Risk Factor Surveillance System (BRFSS) 2015 survey. It includes different health-related variables collected from adults in the USA. The dataset is useful for analyzing factors that may indicate diabetes among the population.

**Purpose of EDA**: The primary goal of this exploratory data analysis is to understand the relationships between different health indicators and the presence of diabetes. By examining patterns and correlations in the data, we aim to identify key predictors that can be used in a predictive modeling to classify individuals as diabetic or non-diabetic.

# Data Description

- **Diabetes_binary**: Indicates diabetes status (0 = No diabetes, 1 = Diabetes).
- **HighBP**: High blood pressure (0 = No, 1 = Yes).
- **HighChol**: High cholesterol (0 = No, 1 = Yes).
- **CholCheck**: Cholesterol check in the past 5 years (0 = No, 1 = Yes).
- **BMI**: Body Mass Index.
- **Smoker**: Has smoked at least 100 cigarettes in their entire life (0 = No, 1 = Yes).
- **Stroke**: Ever had a stroke (0 = No, 1 = Yes).
- **HeartDiseaseorAttack**: Coronary heart disease (CHD) or myocardial infarction (MI) (0 = No, 1 = Yes).
- **PhysActivity**: Physical activity in the past 30 days (0 = No, 1 = Yes).
- **Fruits**: Consumes fruit 1 or more times per day (0 = No, 1 = Yes).
- **Veggies**: Consumes vegetables 1 or more times per day (0 = No, 1 = Yes).
- **HvyAlcoholConsump**: Heavy alcohol consumption (0 = No, 1 = Yes).
- **AnyHealthcare**: Has any kind of health care coverage (0 = No, 1 = Yes).
- **NoDocbcCost**: Could not see a doctor due to cost in the past 12 months (0 = No, 1 = Yes).
- **GenHlth**: General health status (1 = Excellent to 5 = Poor).
- **MentHlth**: Number of days mental health was not good (0–30 days).
- **PhysHlth**: Number of days physical health was not good (0–30 days).
- **DiffWalk**: Difficulty walking or climbing stairs (0 = No, 1 = Yes).
- **Sex**: Sex of respondent (0 = Female, 1 = Male).
- **Age**: Age category (1 = 18–24 to 13 = 80 or older).
- **Education**: Education level (1 = No schooling to 6 = College graduate).
- **Income**: Income level (1 = <$10,000 to 8 = ≥$75,000).

# Data Import and Preparation

We begin by loading the necessary libraries and importing the dataset using a relative path.
```{r}
# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(ggcorrplot)
```


```{r}
# Import the dataset
data <- read_csv("diabetes_binary_health_indicators_BRFSS2015.csv")
```

```{r}
# View the structure of the dataset
str(data)

# Summary statistics
summary(data)
```

# Coverting columns to Factor

```{r}
# Convert binary variables to factors with labels
data <- data %>%
  mutate(
    Diabetes_binary = factor(Diabetes_binary, labels = c("No", "Yes")),
    HighBP = factor(HighBP, labels = c("No", "Yes")),
    HighChol = factor(HighChol, labels = c("No", "Yes")),
    CholCheck = factor(CholCheck, labels = c("No", "Yes")),
    Smoker = factor(Smoker, labels = c("No", "Yes")),
    Stroke = factor(Stroke, labels = c("No", "Yes")),
    HeartDiseaseorAttack = factor(HeartDiseaseorAttack, labels = c("No", "Yes")),
    PhysActivity = factor(PhysActivity, labels = c("No", "Yes")),
    Fruits = factor(Fruits, labels = c("No", "Yes")),
    Veggies = factor(Veggies, labels = c("No", "Yes")),
    HvyAlcoholConsump = factor(HvyAlcoholConsump, labels = c("No", "Yes")),
    AnyHealthcare = factor(AnyHealthcare, labels = c("No", "Yes")),
    NoDocbcCost = factor(NoDocbcCost, labels = c("No", "Yes")),
    DiffWalk = factor(DiffWalk, labels = c("No", "Yes")),
    Sex = factor(Sex, labels = c("Female", "Male"))
  )

# Convert ordinal variables to ordered factors
data <- data %>%
  mutate(
    GenHlth = factor(GenHlth, ordered = TRUE, levels = c(1, 2, 3, 4, 5),
                     labels = c("Excellent", "Very Good", "Good", "Fair", "Poor")),
    Age = factor(Age, ordered = TRUE, levels = 1:13,
                 labels = c("18–24", "25–29", "30–34", "35–39", "40–44", "45–49", "50–54",
                            "55–59", "60–64", "65–69", "70–74", "75–79", "80 or older")),
    Education = factor(Education, ordered = TRUE, levels = 1:6,
                       labels = c("No schooling", "Elementary", "Some high school",
                                  "High school graduate", "Some college", "College graduate")),
    Income = factor(Income, ordered = TRUE, levels = 1:8,
                    labels = c("<$10,000", "$10,000–$15,000", "$15,000–$20,000",
                               "$20,000–$25,000", "$25,000–$35,000", "$35,000–$50,000",
                               "$50,000–$75,000", "≥$75,000"))
  )

```

# Checking for NA

```{r}
# Check for missing values in each column
colSums(is.na(data))
```

# Plots

## Number of individuals with and without diabetes
```{r}
# Plot the distribution of diabetes status
ggplot(data, aes(x = Diabetes_binary, fill = Diabetes_binary)) +
  geom_bar() +
  labs(title = "Diabetes Prevalence", x = "Diabetes Status", y = "Count") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal()
```

## Age Distribution for Diabetes binary in dataset
```{r}
# Plot diabetes prevalence across age groups
ggplot(data, aes(x = Age, fill = Diabetes_binary)) +
  geom_bar(position = "fill") +
  labs(title = "Diabetes Prevalence by Age Group", x = "Age Group", y = "Proportion") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal() +
  coord_flip()
```

## BMI Distributions
```{r}
# Boxplot of BMI by diabetes status
ggplot(data, aes(x = Diabetes_binary, y = BMI, fill = Diabetes_binary)) +
  geom_boxplot() +
  labs(title = "BMI by Diabetes Status", x = "Diabetes Status", y = "BMI") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal()
```

## Physical activity

```{r}
# Bar plot of physical activity vs. diabetes status
ggplot(data, aes(x = PhysActivity, fill = Diabetes_binary)) +
  geom_bar(position = "fill") +
  labs(title = "Physical Activity vs. Diabetes Status", x = "Physical Activity", y = "Proportion") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal()
```

## Smoking Status and Diabetes
```{r}
# Bar plot of smoking status vs. diabetes
ggplot(data, aes(x = Smoker, fill = Diabetes_binary)) +
  geom_bar(position = "fill") +
  labs(title = "Smoking Status vs. Diabetes", x = "Smoking Status", y = "Proportion") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal()
```

## General health status and Diabetes
```{r}
# Proportion of diabetes across general health status
ggplot(data, aes(x = GenHlth, fill = Diabetes_binary)) +
  geom_bar(position = "fill") +
  labs(title = "Diabetes Prevalence by General Health Status", x = "General Health", y = "Proportion") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal()
```

## Sex and Diabetes
```{r}
# Diabetes prevalence by sex
ggplot(data, aes(x = Sex, fill = Diabetes_binary)) +
  geom_bar(position = "fill") +
  labs(title = "Diabetes Prevalence by Sex", x = "Sex", y = "Proportion") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal()
```

## Income and Diabetes

```{r}
# Diabetes prevalence by income level
ggplot(data, aes(x = Income, fill = Diabetes_binary)) +
  geom_bar(position = "fill") +
  labs(title = "Diabetes Prevalence by Income Level", x = "Income Level", y = "Proportion") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal() +
  coord_flip()
```

## Healthcare access and diabetes
```{r}
# Diabetes prevalence by healthcare coverage
ggplot(data, aes(x = AnyHealthcare, fill = Diabetes_binary)) +
  geom_bar(position = "fill") +
  labs(title = "Diabetes Prevalence by Healthcare Coverage", x = "Has Healthcare", y = "Proportion") +
  scale_fill_manual(values = c("No" = "skyblue", "Yes" = "salmon")) +
  theme_minimal()

```

```{r}
# Select numeric variables
numeric_vars <- data %>% select(BMI, MentHlth, PhysHlth)

# Compute correlation matrix
cor_matrix <- cor(numeric_vars)

# Visualize correlation matrix
ggcorrplot(cor_matrix, lab = TRUE)
```

[Click here for the Modeling Page](Modeling.html)